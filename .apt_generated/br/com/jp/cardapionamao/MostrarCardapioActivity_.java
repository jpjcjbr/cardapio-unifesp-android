//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package br.com.jp.cardapionamao;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.widget.TextView;
import br.com.jp.cardapionamao.R.id;
import br.com.jp.cardapionamao.R.layout;
import br.com.jp.cardapionamao.model.Cardapio;
import com.googlecode.androidannotations.api.BackgroundExecutor;

public final class MostrarCardapioActivity_
    extends MostrarCardapioActivity
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.activity_mostrar_cardapio);
    }

    private void init_(Bundle savedInstanceState) {
        injectExtras_();
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().setFlags(android.view.WindowManager.LayoutParams.FLAG_FULLSCREEN, android.view.WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }

    private void afterSetContentView_() {
        guarnicao = ((TextView) findViewById(id.guarnicao));
        hoje = ((TextView) findViewById(id.hoje));
        saladas = ((TextView) findViewById(id.saladas));
        sobremesa = ((TextView) findViewById(id.sobremesa));
        pratoPrincipal = ((TextView) findViewById(id.pratoPrincipal));
        sucos = ((TextView) findViewById(id.sucos));
        quentes = ((TextView) findViewById(id.quentes));
        inicializarTela();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, android.view.ViewGroup.LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static MostrarCardapioActivity_.IntentBuilder_ intent(Context context) {
        return new MostrarCardapioActivity_.IntentBuilder_(context);
    }

    @SuppressWarnings("unchecked")
    private<T >T cast_(Object object) {
        return ((T) object);
    }

    private void injectExtras_() {
        Intent intent_ = getIntent();
        Bundle extras_ = intent_.getExtras();
        if (extras_!= null) {
            if (extras_.containsKey("refeicao")) {
                try {
                    tipo = cast_(extras_.get("refeicao"));
                } catch (ClassCastException e) {
                    Log.e("MostrarCardapioActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void mostrarMensagemErro() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    MostrarCardapioActivity_.super.mostrarMensagemErro();
                } catch (RuntimeException e) {
                    Log.e("MostrarCardapioActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void atualizarCampos(final Cardapio cardapio) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    MostrarCardapioActivity_.super.atualizarCampos(cardapio);
                } catch (RuntimeException e) {
                    Log.e("MostrarCardapioActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void buscarCardapios() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    MostrarCardapioActivity_.super.buscarCardapios();
                } catch (RuntimeException e) {
                    Log.e("MostrarCardapioActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, MostrarCardapioActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public MostrarCardapioActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

        public MostrarCardapioActivity_.IntentBuilder_ tipo(String tipo) {
            intent_.putExtra("refeicao", tipo);
            return this;
        }

    }

}
